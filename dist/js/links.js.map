{
  "version": 3,
  "sources": ["source/_js/src/util.ts", "source/_js/src/links.ts"],
  "sourcesContent": ["export function docReady(body: () => void) {\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", body)\n  } else {\n    body()\n  }\n}\n\nexport function throttle(f: (...args: any[]) => void, time: number) {\n  let lastTime: null | number = null\n  return function (this: any) {\n    const current = Date.now()\n    if (lastTime !== null && current - lastTime < time) return\n    lastTime = current\n    // eslint-disable-next-line prefer-rest-params\n    return f.call(this, arguments)\n  }\n}\n\ntype _HTMLElement = HTMLElement & {\n  on: (eventName: string, callback: (...args: any[]) => any) => _HTMLElement\n  attr: (name: string, value: string) => _HTMLElement\n}\n\nexport function h(\n  tagName: string,\n  classes?: string[],\n  ...children: (HTMLElement | string | null | false | undefined)[]\n): _HTMLElement {\n  const $el = document.createElement(tagName) as ReturnType<typeof h>\n  if (classes) $el.classList.add(...classes)\n  for (const child of children) {\n    if (!child) continue\n    let $child: Node\n    if (typeof child === \"string\") $child = document.createTextNode(child)\n    else $child = child\n    $el.appendChild($child)\n  }\n  $el.on = (eventName, callback) => {\n    $el.addEventListener(eventName, callback)\n    return $el\n  }\n  $el.attr = (name, value) => {\n    $el.setAttribute(name, value)\n    return $el\n  }\n  return $el\n}\n\nexport function a(text: string, url: string): HTMLElement {\n  return h(\"a\", [], text).attr(\"target\", \"_blank\").attr(\"href\", url)\n}\n", "import { a, docReady, h } from \"./util\"\n\nconst URL = \"feeds.opml.xml\"\n// eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\nconst $container = document.currentScript?.parentElement!\n\ndocReady(async () => {\n  const xmlContent = await (await fetch(URL)).text()\n  const parser = new DOMParser()\n  const feeds = parser\n    .parseFromString(xmlContent, \"text/xml\")\n    .querySelector('outline[text=\"Uncategorized\"]')!\n  const nodesToAdd = <HTMLElement[]>[]\n  let prevTitle = \"\"\n  for (const feed of feeds.children) {\n    const title = feed.getAttribute(\"text\")\n    if (!title || title === prevTitle) continue\n    prevTitle = title\n    const rssURL = feed.getAttribute(\"xmlUrl\")\n    const siteURL = feed.getAttribute(\"htmlUrl\")\n    const description = feed.getAttribute(\"description\")\n    const node = h(\n      \"div\",\n      [\"links-item\"],\n      h(\"b\", [\"links-title\"], title),\n      siteURL && h(\"span\", [\"links-url\"], \"[\", a(\"Site\", siteURL), \"]\"),\n      rssURL && h(\"span\", [\"links-url\"], \"[\", a(\"Feed\", rssURL), \"]\"),\n      description && h(\"div\", [\"links-description\"], description),\n    )\n    nodesToAdd.push(node)\n  }\n  const $wrapper = h(\"div\", [\"links-wrapper\"], ...nodesToAdd)\n  $container.append($wrapper)\n})\n"],
  "mappings": "mBAAO,SAASA,EAASC,EAAkB,CACrC,SAAS,aAAe,UAC1B,SAAS,iBAAiB,mBAAoBA,CAAI,EAElDA,EAAK,CAET,CAkBO,SAASC,EACdC,EACAC,KACGC,EACW,CACd,IAAMC,EAAM,SAAS,cAAcH,CAAO,EACtCC,GAASE,EAAI,UAAU,IAAI,GAAGF,CAAO,EACzC,QAAWG,KAASF,EAAU,CAC5B,GAAI,CAACE,EAAO,SACZ,IAAIC,EACA,OAAOD,GAAU,SAAUC,EAAS,SAAS,eAAeD,CAAK,EAChEC,EAASD,EACdD,EAAI,YAAYE,CAAM,CACxB,CACA,OAAAF,EAAI,GAAK,CAACG,EAAWC,KACnBJ,EAAI,iBAAiBG,EAAWC,CAAQ,EACjCJ,GAETA,EAAI,KAAO,CAACK,EAAMC,KAChBN,EAAI,aAAaK,EAAMC,CAAK,EACrBN,GAEFA,CACT,CAEO,SAASO,EAAEC,EAAcC,EAA0B,CACxD,OAAOb,EAAE,IAAK,CAAC,EAAGY,CAAI,EAAE,KAAK,SAAU,QAAQ,EAAE,KAAK,OAAQC,CAAG,CACnE,CCjDA,IAAMC,EAAM,iBAENC,EAAa,SAAS,eAAe,cAE3CC,EAAS,SAAY,CACnB,IAAMC,EAAa,MAAO,MAAM,MAAMH,CAAG,GAAG,KAAK,EAE3CI,EADS,IAAI,UAAU,EAE1B,gBAAgBD,EAAY,UAAU,EACtC,cAAc,+BAA+B,EAC1CE,EAA4B,CAAC,EAC/BC,EAAY,GAChB,QAAWC,KAAQH,EAAM,SAAU,CACjC,IAAMI,EAAQD,EAAK,aAAa,MAAM,EACtC,GAAI,CAACC,GAASA,IAAUF,EAAW,SACnCA,EAAYE,EACZ,IAAMC,EAASF,EAAK,aAAa,QAAQ,EACnCG,EAAUH,EAAK,aAAa,SAAS,EACrCI,EAAcJ,EAAK,aAAa,aAAa,EAC7CK,EAAOC,EACX,MACA,CAAC,YAAY,EACbA,EAAE,IAAK,CAAC,aAAa,EAAGL,CAAK,EAC7BE,GAAWG,EAAE,OAAQ,CAAC,WAAW,EAAG,IAAKC,EAAE,OAAQJ,CAAO,EAAG,GAAG,EAChED,GAAUI,EAAE,OAAQ,CAAC,WAAW,EAAG,IAAKC,EAAE,OAAQL,CAAM,EAAG,GAAG,EAC9DE,GAAeE,EAAE,MAAO,CAAC,mBAAmB,EAAGF,CAAW,CAC5D,EACAN,EAAW,KAAKO,CAAI,CACtB,CACA,IAAMG,EAAWF,EAAE,MAAO,CAAC,eAAe,EAAG,GAAGR,CAAU,EAC1DJ,EAAW,OAAOc,CAAQ,CAC5B,CAAC",
  "names": ["docReady", "body", "h", "tagName", "classes", "children", "$el", "child", "$child", "eventName", "callback", "name", "value", "a", "text", "url", "URL", "$container", "docReady", "xmlContent", "feeds", "nodesToAdd", "prevTitle", "feed", "title", "rssURL", "siteURL", "description", "node", "h", "a", "$wrapper"]
}
